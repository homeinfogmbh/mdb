#! /usr/bin/env python3
"""crmgr

CRM database manager

Usage:
    crmgr search country <search_string>
    crmgr search state <search_string>
    crmgr search address <search_string>
    crmgr search company <search_string>
    crmgr search department <search_string>
    crmgr search employee <search_string>
    crmgr search customer <search_string>

    crmgr add country <iso> <name> [--original-name=<name>]
    crmgr add state <country> <iso> <name>
    crmgr add address <street> <house_number> <zip_code> <city> \
[--state=<state>]
    crmgr add po-box <po_box> <city> [--state=<state>]
    crmgr add company <name> [--address=<address>] [--annotation=<annotation>]
    crmgr add department <name> [--type=<type>]
    crmgr add employee <company> <department> <surname> <phone> \
[--fist-name=<name>] [--cellphone=<cellphone>] [--email=<email>] \
[--alt-phone=<phone>] [--fax=<fax>] [--address=<address>]
    crmgr add customer <company> [--annotation=<annotation>]
"""
from os.path import basename
from logging import INFO, getLogger, basicConfig

from peewee import DoesNotExist

from homeinfo.crm import Country, State, Address, Company, Customer


if __name__ == '__main__':
    from docopt import docopt

    binary = basename(__file__)
    options = docopt(__doc__)

    basicConfig(level=INFO)
    logger = getLogger(binary)

    if options['search']:
        ss = options['<search_string>']
        ssl = ss.lower()

        if options['country']:
            for country in Country:
                if (ssl in country.iso.lower() or
                        ssl in country.name or
                        ssl in country.original_name):
                    print(country.iso, ': ', country.name, ' / ',
                          country.original_name, sep='')
        elif options['customer']:

            try:
                cid = int(ss)
            except ValueError:
                cid = None

            if cid is None:
                for customer in Customer:
                    if ssl in customer.name.lower():
                        print(repr(customer), str(customer), sep=': ')
            else:
                try:
                    customer = Customer.get(Customer.id == cid)
                except DoesNotExist:
                    exit(1)
                else:
                    print(repr(customer), str(customer), sep=': ')
        else:
            raise NotImplementedError()
    else:
        raise NotImplementedError()
